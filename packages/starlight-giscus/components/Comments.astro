---
const { entry, lang } = Astro.locals.starlightRoute;
const {
    repo,
    repoId,
    category,
    categoryId,
    mapping,
    reactions,
    inputPosition,
    theme,
    lazy
} = globalThis.giscusConfig;
const preparedTheme = typeof theme === 'object' ? theme : { auto: theme };
const giscus = entry.data.giscus ?? true;
---
{
    giscus && (
        <giscus-comments data-theme={JSON.stringify(preparedTheme)}>
            <div class="comments">
                <script src="https://giscus.app/client.js"
                    data-repo={repo}
                    data-repo-id={repoId}
                    data-category={category}
                    data-category-id={categoryId}
                    data-mapping={mapping}
                    data-strict="1"
                    data-reactions-enabled={+reactions}
                    data-emit-metadata="0"
                    data-input-position={inputPosition}
                    data-theme={preparedTheme.auto}
                    data-lang={lang}
                    data-loading={lazy ? 'lazy' : null}
                    crossorigin="anonymous"
                    async
                >
                </script>
            </div>
        </giscus-comments>

        <script>
            class GiscusComments extends HTMLElement {
                constructor() {
                    super();

                    const theme = JSON.parse(this.dataset.theme!)

                    const darkTheme = theme.dark || 'dark';
                    const lightTheme = theme.light || 'light';
                    const preferredTheme = theme.auto || 'preferred_color_scheme';

                    const getThemeValue = (fallback = 'preferred_color_scheme') => {
                        const palette = localStorage.getItem('starlight-theme') || fallback

                        return palette === 'dark'
                            ? darkTheme
                            : (palette === 'light' ? lightTheme : preferredTheme)
                    }

                    function setGiscusTheme() {
                        const frame: HTMLIFrameElement = document.querySelector('iframe.giscus-frame')!
                        const theme = getThemeValue();

                        frame.contentWindow?.postMessage(
                            {
                                giscus: {
                                    setConfig: {
                                        theme: theme
                                    }
                                }
                            },
                            '*'
                        )
                    }

                    function handleGiscusMessage(event: MessageEvent) {
                        if (event.origin !== 'https://giscus.app') return;
                        if (!(typeof event.data === 'object' && event.data.giscus)) return;
                        setGiscusTheme();
                    }

                    const giscus: HTMLScriptElement = document.querySelector('script[src*="giscus.app"]')!

                    giscus.dataset.theme = getThemeValue();

                    document.addEventListener('DOMContentLoaded', function() {
                        const ref: Element = document.querySelector('starlight-theme-select')!

                        ref.addEventListener('change', setGiscusTheme)
                        window.addEventListener('message', handleGiscusMessage);
                    })
                }
            }

            customElements.define('giscus-comments', GiscusComments);
        </script>
    )
}
